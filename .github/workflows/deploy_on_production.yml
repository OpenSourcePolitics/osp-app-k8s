---
name: Deploy Image to production

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Login to registry
        run: |
          docker login ${{ secrets.CACHE_REGISTRY }} -u userdoesnotmatter -p ${{ secrets.TOKEN }}
      - name: Set env
        run: echo "CACHE_TAG=${{ secrets.CACHE_REGISTRY }}/${GITHUB_REF}" >> $GITHUB_ENV
      - name: Wait on tests
        uses: lewagon/wait-on-check-action@master
        with:
          ref: ${{ github.sha }}
          check-name: build_cache_image # name of the existing check - omit to wait for all checks
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 30 # seconds
      - names: Pulling cached image
        run: |
          docker pull ${{env.CACHE_TAG}}
      - name: Renaming image
        run: |
          docker tag ${{env.CACHE_TAG}} ${{ secrets.TAG }}
      - name: Checks for modified app deployment
        uses: dorny/paths-filter@v2
        id: app_changes
        with:
          base: ${{ github.ref }}
          filters: |
            src:
              - 'kubeconfig/base/app-deployment.yml'
              - 'kubeconfig/overlays/production/app-deployment.yml'
      - name: Checks for modified sidekiq deployment
        uses: dorny/paths-filter@v2
        id: sidekiq_changes
        with:
          base: ${{ github.ref }}
          filters: |
            src:
              - 'kubeconfig/base/sidekiq-deployment.yml'
              - 'kubeconfig/overlays/production/sidekiq-deployment.yml'
      - name: Wait on tests
        uses: lewagon/wait-on-check-action@master
        with:
          ref: ${{ github.sha }}
          check-name: Tests # name of the existing check - omit to wait for all checks
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 30 # seconds
      - name: Login to registry
        run: |
          docker login ${{ secrets.REGISTRY }} -u userdoesnotmatter -p ${{ secrets.TOKEN }}
      - name: Push Image
        run: |
          docker push ${{ secrets.TAG }}
      - name: Delete old migration job
        uses: actions-hub/kubectl@master
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
        with:
          args: delete job decidim-k8s-migration-job --ignore-not-found
      - name: Run migration
        uses: actions-hub/kubectl@master
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
        with:
          args: apply -f kubeconfig/base/migration-job.yaml
      - name: Apply configuration changes
        uses: actions-hub/kubectl@master
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
        with:
          args: apply -k kubeconfig/overlays/production
      - name: Run app rolling update
        if: steps.app_changes.outputs.src == 'false'
        uses: actions-hub/kubectl@master
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
        with:
          args: rollout restart deployment
      - name: Run sidekiq rolling update
        if: steps.sidekiq_changes.outputs.src == 'false'
        uses: actions-hub/kubectl@master
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
        with:
          args: rollout restart deployment
